/**
 * Button Component Styles
 * 
 * This file contains styles for the custom button component with 3D effect,
 * animated dots pattern, and responsive behavior for different devices.
 * 
 * The button uses custom properties for color theming and implements
 * different states for hover, active, and focus interactions.
 */

/* Button styling with custom properties */
.button {
  --stone-50: #fafaf9;
  --stone-800: #292524;
  --orange-400: #FF8C00;

  font-size: 1rem;
  cursor: pointer;
  position: relative;
  font-family: "Spectral", sans-serif;
  font-weight: bold;
  line-height: 1;
  padding: 1px;
  margin: 0 auto;
  display: inline-block;
  transform: translate(-4px, -4px);
  outline: 2px solid transparent;
  outline-offset: 5px;
  border-radius: 9999px;
  background-color: var(--stone-800);
  color: var(--stone-800);
  transition:
    transform 150ms ease,
    box-shadow 150ms ease;
  text-align: center;
  box-shadow:
    0.5px 0.5px 0 0 var(--stone-800),
    1px 1px 0 0 var(--stone-800),
    1.5px 1.5px 0 0 var(--stone-800),
    2px 2px 0 0 var(--stone-800),
    2.5px 2.5px 0 0 var(--stone-800),
    3px 3px 0 0 var(--stone-800),
    0 0 0 2px var(--stone-50),
    0.5px 0.5px 0 2px var(--stone-50),
    1px 1px 0 2px var(--stone-50),
    1.5px 1.5px 0 2px var(--stone-50),
    2px 2px 0 2px var(--stone-50),
    2.5px 2.5px 0 2px var(--stone-50),
    3px 3px 0 2px var(--stone-50),
    3.5px 3.5px 0 2px var(--stone-50),
    4px 4px 0 2px var(--stone-50);
}

.button:hover {
  transform: translate(0, 0);
  box-shadow: 0 0 0 2px var(--stone-50);
}

.button:active,
.button:focus-visible {
  outline-color: var(--orange-400);
}

.button:focus-visible {
  outline-style: dashed;
}

.button > div {
  position: relative;
  pointer-events: none;
  background-color: var(--orange-400);
  border: 2px solid rgba(255, 255, 255, 0.3);
  border-radius: 9999px;
}

.button > div::before {
  content: "";
  position: absolute;
  inset: 0;
  border-radius: 9999px;
  opacity: 0.5;
  background-image: radial-gradient(
      rgb(255 255 255 / 80%) 20%,
      transparent 20%
    ),
    radial-gradient(rgb(255 255 255 / 100%) 20%, transparent 20%);
  background-position:
    0 0,
    4px 4px;
  background-size: 8px 8px;
  mix-blend-mode: hard-light;
  animation: dots 0.5s infinite linear;
}

.button > div > span {
  position: relative;
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 0.75rem 1.25rem;
  gap: 0.25rem;
  filter: drop-shadow(0 -1px 0 rgba(255, 255, 255, 0.25));
  transition: transform 150ms ease;
}

.button:active > div > span {
  transform: translateY(2px);
}

/* React state management for button press state */
.button.pressed {
  transform: translate(0, 0);
  box-shadow: 0 0 0 2px var(--stone-50);
}

.button.pressed > div > span {
  transform: translateY(2px);
}

@keyframes dots {
  0% {
    background-position:
      0 0,
      4px 4px;
  }
  100% {
    background-position:
      8px 0,
      12px 4px;
  }
}

/* Responsive styles for the button */
@media (max-width: 768px) {
  .button {
    font-size: 0.9rem;
  }
  
  .button > div > span {
    padding: 0.6rem 1rem;
  }
  
  /* Mobile-specific hover and active states */
  .button:hover {
    transform: translate(-4px, -4px);
    box-shadow:
      0.5px 0.5px 0 0 var(--stone-800),
      1px 1px 0 0 var(--stone-800),
      1.5px 1.5px 0 0 var(--stone-800),
      2px 2px 0 0 var(--stone-800),
      2.5px 2.5px 0 0 var(--stone-800),
      3px 3px 0 0 var(--stone-800),
      0 0 0 2px var(--stone-50),
      0.5px 0.5px 0 2px var(--stone-50),
      1px 1px 0 2px var(--stone-50),
      1.5px 1.5px 0 2px var(--stone-50),
      2px 2px 0 2px var(--stone-50),
      2.5px 2.5px 0 2px var(--stone-50),
      3px 3px 0 2px var(--stone-50),
      3.5px 3.5px 0 2px var(--stone-50),
      4px 4px 0 2px var(--stone-50);
  }
  
  .button:active {
    transform: translate(0, 0);
    box-shadow: 0 0 0 2px var(--stone-50);
    transition: transform 100ms ease, box-shadow 100ms ease;
  }
} 